---
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run ansible-lint
        run: ansible-lint

  molecule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - geerlingguy/docker-debian13-ansible:latest
          - geerlingguy/docker-debian12-ansible:latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Run Molecule tests
        run: molecule test
        env:
          MOLECULE_DISTRO: ${{ matrix.distro }}

  galaxy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [lint, molecule]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Build collection
        run: ansible-galaxy collection build

      - name: Publish to Galaxy (if tagged)
        if: startsWith(github.ref, 'refs/tags/')
        run: ansible-galaxy collection publish *.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
