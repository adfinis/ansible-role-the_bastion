---
# Default variables for the_bastion role

# Installation directory for The Bastion
bastion_install_dir: /opt/bastion

# The Bastion version to install (latest release tag)
bastion_version: "v3.22.00"

# Whether to use git clone or tarball installation
bastion_install_method: tarball # or 'git'

# Repository for The Bastion
bastion_git_repo: "https://github.com/ovh/the-bastion"

# Git version to checkout
bastion_git_version: "{{ bastion_version }}"

# Whether to install syslog-ng (recommended)
bastion_install_syslog_ng: true

# Install various optional packages
bastion_install_optional_packages: true

# Whether to install development packages (not recommended for production)
bastion_install_dev_packages: false

# Whether to encrypt /home directory
bastion_encrypt_home: false

# Encryption passphrase (only used if bastion_encrypt_home is true)
bastion_encryption_passphrase: ""

# First admin account configuration (only used for new installations)
bastion_first_admin:
  username: ""
  ssh_public_key: ""

# Additional configuration options for /etc/bastion/bastion.conf
bastion_config:
  bastionName: "sensfortress"

# Whether to install optional tools
bastion_install_yubico_piv_checker: false
bastion_install_mkhash_helper: false

# Backup configuration
bastion_backup_encryption_enabled: true
bastion_backup_dir: /root/ansible-backups # Ansible role backups (separate from bastion backups)

# Bastion ACL backup configuration (for osh-backup-acl-keys.sh)
bastion_acl_backup_enabled: "1"
bastion_acl_backup_destdir: "/var/backups/bastion" # Bastion's own backup directory
bastion_acl_backup_days_to_keep: "90"
bastion_acl_backup_logfile: ""
bastion_acl_backup_log_facility: "local6"
bastion_acl_backup_gpg_keys: "" # Space-separated list of GPG key IDs for encryption (will default to bastion_admin_gpg_keys)
bastion_acl_backup_signing_key: "" # GPG key ID for signing (will default to autogenerated bastion key if empty)
bastion_acl_backup_signing_key_passphrase: "" # Passphrase for signing key (will default to autogenerated bastion key if empty)
bastion_acl_backup_push_remote: "" # Remote host for backup push (e.g., "user@host:/path/")
bastion_acl_backup_push_options: "" # Additional options for scp

# Bastion encrypt-rsync configuration (for osh-encrypt-rsync.pl)
bastion_encrypt_rsync_enabled: true # Enable encrypt-rsync system
bastion_encrypt_rsync_logfile: "" # Log file path (empty = syslog only)
bastion_encrypt_rsync_syslog_facility: "local6" # Syslog facility for logging
bastion_encrypt_rsync_verbose: "0" # Verbosity level (0=normal, 1=verbose, 2=debug)

# GPG encryption and signing for ttyrec files
bastion_encrypt_rsync_signing_key: "" # GPG key ID for signing ttyrec files (will default to autogenerated bastion key if empty)
bastion_encrypt_rsync_signing_key_passphrase: "" # Passphrase for signing key (will default to autogenerated bastion key if empty)
bastion_encrypt_rsync_recipients: [] # Multi-layer encryption recipients (array of arrays)
# Example:
# bastion_encrypt_rsync_recipients:
#   - ["AAAAAAAA", "BBBBBBBB"]  # First encryption layer (auditors)
#   - ["CCCCCCCC", "DDDDDDDD"]  # Second encryption layer (sysadmins)
#
# Default: bastion_admin_gpg_keys

# File handling and retention
bastion_encrypt_rsync_encrypt_dir: "/home/.encrypt" # Directory for encrypted files
bastion_encrypt_rsync_ttyrec_delay_days: "14" # Days before encrypting ttyrec files
bastion_encrypt_rsync_user_logs_delay_days: "31" # Days before encrypting user logs (min 31)
bastion_encrypt_rsync_user_sqlites_delay_days: "31" # Days before encrypting user sqlite files (min 31)

# Remote sync configuration
bastion_encrypt_rsync_destination: "" # Rsync destination (empty = disable rsync)
bastion_encrypt_rsync_rsh: "" # SSH command for rsync (e.g., "ssh -p 222 -i /root/.ssh/id_backup")
bastion_encrypt_rsync_delay_before_remove_days: "0" # Days before removing local files after rsync (0=immediate, -1=never)

# Upgrade specific settings
bastion_upgrade_backup_before: true
bastion_upgrade_use_managed: false # Use --managed-upgrade instead of --upgrade

# High Availability / Clustering configuration
bastion_ha_enabled: false
bastion_ha_role: master # master or slave
bastion_ha_master_group: ha_master # ansible group name for the master node
bastion_ha_master_ip: "" # IP address of the master bastion (required for slaves)
bastion_ha_slave_ips: [] # List of slave IP addresses (required for master)
bastion_ha_ssh_key_path: "/root/.ssh/id_master2slave" # SSH key path for master-slave communication
bastion_ha_sync_user: "bastionsync" # User for synchronization

# Configuration for osh-sync-watcher
bastion_ha_sync_syslog: "local6"
bastion_ha_sync_enabled: "{{ bastion_ha_enabled | ternary('1', '0') }}"
bastion_ha_sync_timeout: 120
bastion_ha_sync_rshcmd: "ssh -q -i {{ bastion_ha_ssh_key_path }} -o StrictHostKeyChecking=accept-new"
bastion_ha_sync_remoteuser: "{{ bastion_ha_sync_user }}"
bastion_ha_sync_remotehostlist: "{{ bastion_ha_slave_ips | join(' ') }}"

# GPG configuration for encryption and signature
bastion_gpg_enabled: false

# Bastion GPG key configuration (for signing ttyrec files)
bastion_gpg_key_generate: true # Generate the bastion GPG key automatically

# Admin GPG key configuration (for encrypting backups and ttyrec files)
# One or more admin public keys are required for GPG functionality
bastion_admin_gpg_keys: [] # List of admin GPG public keys to import
# Example:
# bastion_admin_gpg_keys:
#   - |
#     -----BEGIN PGP PUBLIC KEY BLOCK-----
#     mQENBF...
#     -----END PGP PUBLIC KEY BLOCK-----
#   - |
#     -----BEGIN PGP PUBLIC KEY BLOCK-----
#     mQGNBF...
#     -----END PGP PUBLIC KEY BLOCK-----

# External account validation configuration
bastion_external_validation_enabled: false # Enable external account validation
bastion_external_validation_program_path: "/opt/bastion/bin/other/check-active-account-custom.sh" # Path where the validation program will be deployed
bastion_external_validation_program_content: "" # Content of the validation program script (alternative to template)
bastion_external_validation_program_template: "" # Path to template file for the validation program (alternative to content)
bastion_external_validation_program_mode: "0755" # File permissions for the validation program
bastion_external_validation_deny_on_failure: true # Whether to deny access when validation program fails

# External validation via LDAP
bastion_external_validation_ldap_server: ""
bastion_external_validation_ldap_base_dn: ""
bastion_external_validation_ldap_bind_dn: ""
bastion_external_validation_ldap_bind_password: ""
bastion_external_validation_ldap_ignore_tls: false
bastion_external_validation_ldap_required_group: "" # Optional: require membership in this
bastion_external_validation_ldap_cache_file: "/var/cache/bastion/active_accounts.cache"
bastion_external_validation_ldap_cache_ttl: 900 # Cache TTL in seconds"
